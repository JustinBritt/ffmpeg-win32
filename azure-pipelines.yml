variables:
  FFMPEG_VERSION: "3.3.4"

jobs:
- job: windows_cross
  strategy:
    maxParallel: 2
    matrix: 
      x86:
        arch: x86
        targetOs: mingw32
        crossPrefix: i686-w64-mingw32
        rid: win-x86
        package: w64-i686
      x64:
        arch: x86_64
        targetOs: mingw32
        crossPrefix: x86_64-w64-mingw32
        rid: win-x64
        package: w64-x86-64
  pool:
    vmImage: ubuntu-16.04
  container:
    image: ubuntu:18.04
    options: "--name ci-container -v /usr/bin/docker:/tmp/docker:ro"
  steps:
  - script: |
      /tmp/docker exec -t -u 0 ci-container \
      sh -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confold" -y install sudo"
    displayName: Set up sudo
  - script: |
      sudo apt-get install -y build-essential gcc-mingw-$(package) g++-mingw-$(package) yasm libunwind8 wget
    displayName: Install cross-compiler
  - script: |
      wget -nv -nc http://ffmpeg.org/releases/ffmpeg-$(FFMPEG_VERSION).tar.bz2 -O ffmpeg-$(FFMPEG_VERSION).tar.bz2
      tar xjf ffmpeg-$(FFMPEG_VERSION).tar.bz2
    displayName: Download FFmpeg
  - script: |
      # See https://github.com/FFmpeg/FFmpeg/blob/master/configure for an overview of all configuration
      # options
      ./configure --arch=$(arch) --target-os=$(targetOs) --cross-prefix=$(crossPrefix)- --disable-static --enable-shared --enable-version3 --enable-cuda --enable-cuvid --enable-dxva2
      make
    workingDirectory: ffmpeg-$(FFMPEG_VERSION)
    displayName: Build FFmpeg
  - script:
      make DESTDIR=$(Build.ArtifactStagingDirectory)/$(rid) install
    workingDirectory: ffmpeg-$(FFMPEG_VERSION)
    displayName: Install FFmpeg
  - script:
      cp /usr/$(crossPrefix)/lib/libwinpthread-1.dll $(Build.ArtifactStagingDirectory)/$(rid)/usr/local/bin
    displayName: Copy additional libraries
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: ffmpeg

- job: macos
  pool:
    vmImage: 'macOS-10.15'
  steps:
  - script: |
      brew install yasm
    displayName: Install YASM
  - script: |
      wget -nv -nc http://ffmpeg.org/releases/ffmpeg-$(FFMPEG_VERSION).tar.bz2 -O ffmpeg-$(FFMPEG_VERSION).tar.bz2
      tar xjf ffmpeg-$(FFMPEG_VERSION).tar.bz2
    displayName: Download FFmpeg
  - script: |
      # See https://github.com/FFmpeg/FFmpeg/blob/master/configure for an overview of all configuration
      # options
      ./configure --arch=x86_64 --disable-static --enable-shared --enable-version3 --enable-cuda --enable-cuvid --enable-dxva2
      make
    workingDirectory: ffmpeg-$(FFMPEG_VERSION)
    displayName: Build FFmpeg
  - script:
      make DESTDIR=$(Build.ArtifactStagingDirectory)/osx-x64 install
    workingDirectory: ffmpeg-$(FFMPEG_VERSION)
    displayName: Install FFmpeg
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: ffmpeg

- job: nuget
  dependsOn:
  - windows_cross
  - macos
  pool:
    vmImage: ubuntu-16.04
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      artifactName: ffmpeg
  - script:
      cd FFmpeg.Native
      dotnet pack -o $(Build.ArtifactStagingDirectory) -c Release
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: nuget
